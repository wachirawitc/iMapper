<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;

namespace <# Write(Namespace); #>
{
    public class <# Write(Name); #> : I<# Write(Name); #>
    {
        private readonly I<# Write(TableName); #>Repository <# Write(TableNameCamelize); #>Repository;

        public <# Write(TableName); #>Service() : this(new <# Write(TableName); #>Repository())
        {
        }

        public <# Write(TableName); #>Service(I<# Write(TableName); #>Repository <# Write(TableNameCamelize); #>Repository)
        {
            this.<# Write(TableNameCamelize); #>Repository = <# Write(TableNameCamelize); #>Repository;
        }

        public <# Write(TableName); #>Model Get(<# Write(GetPkParameter()); #>)
        {
            throw new NotImplementedException();
        }

        public List<<# Write(TableName); #>Model> Get<# Write(TableNamePluralize); #>()
        {
            throw new NotImplementedException();
        }

        <# if(HasPk){ #>
public bool IsExisting(<# Write(GetPkParameter()); #>)
        {
            throw new NotImplementedException();
        }
        <# } #>
    }
}