<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>


namespace <# WriteLine(Namespace); #>
{
	public class <# Write(Name); #> : InvestigationBase<<# Write(ValidatorName); #>>
	{
<# Write(GetRepositoryVariable()); #>

		public <# Write(Name); #>(<# Write(ValidatorName); #> model,
<# Write(GetRepositoryParameter()); #>) : base(model)
		{
<# Write(GetRepositoryInitVariable()); #>
		}

		protected override void InitialRule()
		{
		<# foreach(var column in Columns) { #> 
<# var stringRule = GetStringRule(column); if(string.IsNullOrEmpty(stringRule) == false) { WriteLine(stringRule); } #>
<# var numberRule = GetNumberRule(column); if(string.IsNullOrEmpty(numberRule) == false) { WriteLine(numberRule); } #>
<# var datetimeRule = GetDateTimeValidations(column); if(string.IsNullOrEmpty(datetimeRule) == false) { WriteLine(datetimeRule); } #>
		<# } #>}
	}
}